<Page x:Class="IT008_AppHocAV.View.MainWindow.ShowFlashCardPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:IT008_AppHocAV.View.MainWindow"
       xmlns:UserControl="clr-namespace:IT008_AppHocAV.View.MainWindow"
      mc:Ignorable="d" 
      
      d:DesignHeight="500" d:DesignWidth="800"
      Title="ShowFlashCardPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Assets/Styles/ButtonStyle.xaml"/>
                <ResourceDictionary Source="../../../Assets/Styles/ScrollBarStyle.xaml"/>
                <ResourceDictionary Source="../../../Assets/Styles/BaseStyles.xaml"/>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Page.Resources>




    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="0.3*"></RowDefinition>
        </Grid.RowDefinitions>

    
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">

            <Button Name="ExitButton" BorderThickness="0 0 0 0" Background="Transparent" 
                    Style="{DynamicResource RoundedButtonStyle }"
                    Height="35" Width="35" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 0 5 0" Click="ExitButton_Click">
                <Image Source="/Assets/Icon/ExitIcon.png" />

            </Button>


        </StackPanel>
        <!--// Define a 3D viewport //-->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.1*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <StackPanel Orientation="Horizontal"  VerticalAlignment="Bottom" HorizontalAlignment="Center"   Margin="0 0 505 0">
                    
                    <Button Name ="RefeshButton"  BorderThickness="0 0 0 0" Background="Transparent" 
                    Style="{DynamicResource RoundedButtonStyle }"
                    Height="35" Width="35" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 0 5 0" Click="RefeshButton_Click">
                        <Image Height="30" Width="35" Source="/Assets/Icon/ReturnIcon.png"   />

                    </Button>
                    <Border CornerRadius="10">
                        <Button Name ="ShuffleButton" Style="{DynamicResource RoundedButtonStyle }" Height="35" Width="35" HorizontalAlignment="Right" BorderThickness="0 0 0 0" Background="Transparent"   Margin="10 0 20 0" Click="ShuffleButton_Click" >
                            
                                <Image Name="Shuffle" Source="/Assets/Icon/ShuffleIcon.png" Visibility="Visible"></Image>
                          
                        </Button>
                    </Border>



                </StackPanel>
            </Grid>
           
            <Viewport3D x:Name="CardViewport" Grid.Row="1"
                        Height="auto" MaxHeight="400" Width="auto" MaxWidth ="800"  Margin="10 0 10 10"
                    >

                <!--// Set the camera for the viewport //-->

                <Viewport3D.Camera>
                    <PerspectiveCamera Position="0,0,3"  />
                </Viewport3D.Camera>

                <!--// Define a 2D visual element within the 3D viewport //-->

                <Viewport2DVisual3D x:Name="ViewPort">

                    <!--// Apply a transformation to the 2D visual element //-->

                    <Viewport2DVisual3D.Transform>
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <AxisAngleRotation3D Angle="0"
                                                 Axis="0,1,0" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                    </Viewport2DVisual3D.Transform>

                    <!--// Define the geometry of the 2D visual element //-->

                    <Viewport2DVisual3D.Geometry>
                        <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0"
                                    TextureCoordinates="0,0 0,1 1,1 1,0"
                                    TriangleIndices="0 1 2 0 2 3" />
                    </Viewport2DVisual3D.Geometry>

                    <!--// Set the material for the 2D visual element //-->

                    <Viewport2DVisual3D.Material>
                        <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True"
                                     Brush="#FFFF" />
                    </Viewport2DVisual3D.Material>

                    <!--// Add a Toggle Button //-->
                    
                    <ToggleButton x:Name="Flip_Card"    
                              Cursor="Hand">

                        <!--// Toggle Button Style //-->

                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="border"
                                                BorderThickness="0">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>

                        <ToggleButton.Content>

                            <Grid>




                                <!--// Back //-->

                                <UserControl  Name="Back_Side" >

                                    <Grid>

                                        <!--// Background //-->

                                        <Border
                                             Height="400"
                                             Width="700"
                                             CornerRadius="10">

                                            <Border.Background>

                                                <!--// Use a visual brush for the background //-->

                                                <VisualBrush>

                                                    <VisualBrush.Visual>

                                                        <!--// Create a canvas to hold the visual elements //-->




                                                        <!--// Add Content //-->
                                                        <!--<ContentControl   Template="{StaticResource BackSide_Content}" />-->
                                                        <Border x:Name="Back"
                                                                 Height="200"
                                                                 Width="200"
                                                                 Background="Beige"
                                                                  Opacity="1"
                                                                 >
                                                            <StackPanel>

                                                                <Image  Margin="0 60 0 0 "
                                                                    Width="auto" Height="60" MaxWidth="180"
                                                                        Source="{Binding Image}"
                                                                        >
                                                                    <Image.Style>
                                                                        <Style TargetType="Image">
                                                                            <Style.Triggers>
                                                                                <DataTrigger  Binding="{Binding Image}" Value="{x:Null}">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Image.Style>
                                                                </Image>
                                                                <Label  VerticalAlignment="Center"
                                                              HorizontalAlignment="Center" 
                                                              FontWeight="ExtraBold"
                                                               FontFamily="Fonts/#Comforter"
                                                                FontSize="14" 
                                                                  Content="{Binding Answer}" >
                                                                    <Label.Style>
                                                                        <Style TargetType="Label">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Image}" Value="{x:Null}">

                                                                                    <Setter Property="Margin" Value="0 90 0 0" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Label.Style>

                                                                </Label>

                                                            </StackPanel>






                                                        </Border>







                                                    </VisualBrush.Visual>

                                                </VisualBrush>

                                            </Border.Background>

                                        </Border>

                                    </Grid>
                                </UserControl>

                                <!--// Front //-->

                                <UserControl Name="Front_Side" >
                                    <Grid>
                                        <Border Height="400"
                                             Width="700"
                                              CornerRadius="10">

                                            <Border.Background>

                                                <!--// Use a visual brush for the background //-->

                                                <VisualBrush>

                                                    <VisualBrush.Visual>

                                                        <!--// Create a canvas to hold the visual elements //-->

                                                        <Canvas>

                                                            <!--// Front Side //-->

                                                            <Border x:Name="Front"
                                                              Height="200"
                                                                 Width="200"
                                                                 Background="Beige"
                                                                  Opacity="1">

                                                                <!--// Add Content //-->

                                                                <Label VerticalAlignment="Center"
                                                              HorizontalAlignment="Center" 
                                                              FontWeight="ExtraBold"
                                                               FontFamily="Fonts/#Comforter"
                                                                FontSize="14" 
                                                                  Content="{Binding Question}" ></Label>



                                                            </Border>

                                                        </Canvas>

                                                    </VisualBrush.Visual>

                                                </VisualBrush>

                                            </Border.Background>

                                        </Border>

                                    </Grid>
                                </UserControl>

                            </Grid>

                        </ToggleButton.Content>

                        <!--// Toggle Button - Checked Event //-->

                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>

                                    <!--// Front Side Animation //-->

                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Front_Side"
                                                     Storyboard.TargetProperty="(Image.Opacity)"
                                                     BeginTime="0:0:0.2"
                                                     Duration="0:0:0.3"
                                                     From="1.0"
                                                     To="0.0" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <!--// Back Side Animation //-->

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Back_Side"
                                                     Storyboard.TargetProperty="(Image.Opacity)"
                                                     BeginTime="0:0:0.2"
                                                     Duration="0:0:0.3"
                                                     From="0.0"
                                                     To="1.0" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <!--// Create a rotation animation to animate the rotation of the ViewPort //-->

                                <BeginStoryboard>
                                    <Storyboard>
                                        <Rotation3DAnimation Storyboard.TargetName="ViewPort"
                                                         Storyboard.TargetProperty="(Viewport2DVisual3D.Transform).(RotateTransform3D.Rotation)"
                                                         Duration="0:0:0.3"
                                                         BeginTime="0:0:0.2">

                                            <!--// Set the initial rotation values //-->

                                            <Rotation3DAnimation.From>
                                                <AxisAngleRotation3D Angle="-10"
                                                                 Axis="0,1,0" />
                                            </Rotation3DAnimation.From>

                                            <!--// Set the final rotation values //-->

                                            <Rotation3DAnimation.To>
                                                <AxisAngleRotation3D Angle="100"
                                                                 Axis="0,1,0" />
                                            </Rotation3DAnimation.To>

                                        </Rotation3DAnimation>

                                        <Rotation3DAnimation Storyboard.TargetName="ViewPort"
                                                         Storyboard.TargetProperty="(Viewport2DVisual3D.Transform).(RotateTransform3D.Rotation)"
                                                         Duration="0:0:0.3"
                                                         BeginTime="0:0:0.2">

                                            <Rotation3DAnimation.From>
                                                <AxisAngleRotation3D Angle="-100"
                                                                 Axis="0, 1, 0" />
                                            </Rotation3DAnimation.From>

                                            <Rotation3DAnimation.To>
                                                <AxisAngleRotation3D Angle="-10"
                                                                 Axis="0, 1, 0" />
                                            </Rotation3DAnimation.To>

                                        </Rotation3DAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!--// Toggle Button - Unchecked Event //-->

                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>

                                        <!--Back Side Animation-->

                                        <DoubleAnimation Storyboard.TargetName="Back_Side"
                                                     Storyboard.TargetProperty="(Image.Opacity)"
                                                     BeginTime="0:0:0"
                                                     Duration="0:0:0.1"
                                                     From="1.0"
                                                     To="0.0" />

                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>

                                        <!--Front Side Animation-->

                                        <DoubleAnimation Storyboard.TargetName="Front_Side"
                                                     Storyboard.TargetProperty="(Image.Opacity)"
                                                     BeginTime="0:0:0"
                                                     Duration="0:0:0.1"
                                                     From="0.0"
                                                     To="1.0" />

                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <Rotation3DAnimation Storyboard.TargetName="ViewPort"
                                                         Storyboard.TargetProperty="(Viewport2DVisual3D.Transform).(RotateTransform3D.Rotation)"
                                                         Duration="0:0:0.1"
                                                         BeginTime="0:0:0">

                                            <Rotation3DAnimation.From>
                                                <AxisAngleRotation3D Angle="-10"
                                                                 Axis="0, 1, 0" />
                                            </Rotation3DAnimation.From>

                                            <Rotation3DAnimation.To>
                                                <AxisAngleRotation3D Angle="-100"
                                                                 Axis="0, 1, 0" />
                                            </Rotation3DAnimation.To>

                                        </Rotation3DAnimation>

                                        <Rotation3DAnimation Storyboard.TargetName="ViewPort"
                                                         Storyboard.TargetProperty="(Viewport2DVisual3D.Transform).(RotateTransform3D.Rotation)"
                                                         Duration="0:0:0.1"
                                                         BeginTime="0:0:0">

                                            <Rotation3DAnimation.From>
                                                <AxisAngleRotation3D Angle="100"
                                                                 Axis="0, 1, 0" />
                                            </Rotation3DAnimation.From>

                                            <Rotation3DAnimation.To>
                                                <AxisAngleRotation3D Angle="-10"
                                                                 Axis="0, 1, 0" />
                                            </Rotation3DAnimation.To>

                                        </Rotation3DAnimation>
                                    </Storyboard>
                                </BeginStoryboard>

                            </EventTrigger>

                        </ToggleButton.Triggers>

                    </ToggleButton>

                </Viewport2DVisual3D>

                <!--// Create a ModelVisual3D element //-->

                <ModelVisual3D>

                    <!--// Set the content of the ModelVisual3D //-->

                    <ModelVisual3D.Content>

                        <!--// Create a DirectionLight with a specific color and direction //-->

                        <DirectionalLight Color="#FFFFFF"
                                      Direction="0,0,-1" />

                    </ModelVisual3D.Content>

                </ModelVisual3D>

            </Viewport3D>
        </Grid>


        <Grid Grid.Row="2" Margin="0 0 0 30">
            
            <Button x:Name="NextButton" Background="Transparent"
                      Style="{DynamicResource RoundedButtonStyle }"
                    Height="35" Width="35" HorizontalAlignment="Center" 
                    VerticalAlignment="Bottom" Margin="160 0 0 40" Click="NextButton_Click">
                <Image Source="/Assets/Icon/nextBut.png" />

            </Button>
            <Label Name ="CurrentCard"  Height="35" Width="35" HorizontalAlignment="Center"
                      VerticalAlignment="Bottom" Margin="15 0 20 40" 
                        Content="{Binding Current}" FontSize="22" FontWeight="DemiBold"></Label>
            <Label Height="35" Width="35" HorizontalAlignment="Center"
                    VerticalAlignment="Bottom" Margin="30 0 0 40" 
                   Content="/" FontSize="22" FontWeight="DemiBold" 
                   ></Label>
            <Label  Name="TotalCard" Height="35" Width="35" HorizontalAlignment="Center"
                    VerticalAlignment="Bottom" Margin="60 0 0 40" 
                   Content="{Binding Quantity}" FontSize="22" FontWeight="DemiBold"
                  ></Label>
            <Button   Name="ReturnButton" Background="Transparent"
                        Style="{DynamicResource RoundedButtonStyle }"
                     Height="35" Width="35" HorizontalAlignment="Center"
                      VerticalAlignment="Bottom" Margin="0 0 160 40" Click="ReturnButton_Click">
                <Image Source="/Assets/Icon/nextBut.png" RenderTransformOrigin="0.5,0.5" >
                    <Image.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="180"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>

            </Button>
        </Grid>


    </Grid>



</Page>
